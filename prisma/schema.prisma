// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                      String                   @id @default(cuid())
  email                   String                   @unique
  passwordHash            String
  isPremium               Boolean                  @default(true)
  emailVerified           Boolean                  @default(false)
  emailVerificationTokens EmailVerificationToken[]
  firstName               String? // neu
  lastName                String? // neu
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  watchlist               WatchlistItem[]
  passwordResetTokens     PasswordResetToken[]
}

model WatchlistItem {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  ticker    String
  createdAt DateTime @default(now())

  @@unique([userId, ticker])
}

model EmailVerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([expiresAt])
}

//model InvestorSubscription {
// id         String   @id @default(cuid())
// investorId String
//email      String
//  confirmed  Boolean  @default(false)   // f√ºr Double-Opt-In
//createdAt  DateTime @default(now())

// @@unique([investorId, email])
//}

//model InvestorLastFiling {
//investorId String  @id
//date       DateTime
//}
